{
  "bumpVersion": "patch",
  "dependencyDashboard": true,
  "ignorePaths": [
    "archives/**"
  ],
  "prConcurrentLimit": 0,
  "prHourlyLimit": 0,
  "semanticCommits": "enabled",
  "semanticCommitScope": null,
  "semanticCommitType": "fix",
  "packageRules": [
    {
      "matchManagers": [
        "helm-values"
      ],
      "postUpgradeTasks": {
        "commands": [
          "bash .github/bump-chart-version.sh '{{{parentDir}}}' '{{{isMajor}}}' '{{{isMinor}}}' '{{{isPatch}}}'"
        ],
        "fileFilters": [
          "charts/*/Chart.yaml"
        ],
        "executionMode": "branch"
      }
    },
    {
      "groupName": "docker.io/yuzutech/kroki",
      "matchPackageNames": [
        "docker.io/yuzutech/kroki{/,}**"
      ]
    },
    {
      "groupName": "registry.k8s.io/autoscaling/vpa",
      "matchPackageNames": [
        "registry.k8s.io/autoscaling/vpa{/,}**"
      ]
    },
    {
      "matchFileNames": [
        ".github/workflows/**"
      ],
      "semanticCommitType": "ci"
    },
    {
      "matchDepNames": [
        "helm",
        "kindest/node"
      ],
      "separateMinorPatch": true
    },
    {
      "matchDepNames": [
        "helm",
        "kindest/node"
      ],
      "matchUpdateTypes": [
        "major",
        "minor"
      ],
      "enabled": false
    },
    {
      "matchFileNames": [
        "charts/*/Chart.yaml",
        "charts/*/values.yaml"
      ],
      "matchUpdateTypes": [
        "major"
      ],
      "bumpVersion": "major",
      "semanticCommitType": "feat!"
    },
    {
      "matchFileNames": [
        "charts/*/Chart.yaml",
        "charts/*/values.yaml"
      ],
      "matchUpdateTypes": [
        "minor"
      ],
      "bumpVersion": "minor",
      "semanticCommitType": "feat"
    },
    {
      "matchUpdateTypes": [
        "patch"
      ],
      "automerge": true
    }
  ],
  "customManagers": [
    {
      "customType": "regex",
      "fileMatch": [
        "^\\.github\\/workflows\\/.*$"
      ],
      "matchStrings": [
        "(:|-) (?<currentValue>.+?) # renovate: helm\\n"
      ],
      "datasourceTemplate": "github-releases",
      "depNameTemplate": "helm",
      "packageNameTemplate": "helm/helm"
    },
    {
      "customType": "regex",
      "fileMatch": [
        "^\\.github\\/workflows\\/.*$"
      ],
      "matchStrings": [
        "(:|-) (?<currentValue>.+?) # renovate: kindest\\/node\\n"
      ],
      "datasourceTemplate": "docker",
      "depNameTemplate": "kindest/node"
    },
    {
      "customType": "regex",
      "fileMatch": [
        "^\\.github\\/workflows\\/.*$"
      ],
      "matchStrings": [
        "(:|-) (?<currentValue>.+?) # renovate: python\\n"
      ],
      "datasourceTemplate": "github-releases",
      "depNameTemplate": "python",
      "extractVersionTemplate": "^(?<version>.+)-\\d+$",
      "packageNameTemplate": "actions/python-versions"
    },
    {
      "customType": "regex",
      "fileMatch": [
        "^\\.github\\/workflows\\/.*$"
      ],
      "matchStrings": [
        "(:|-) (?<currentValue>.+?) # renovate: ghcr.io\\/renovatebot\\/renovate\\n"
      ],
      "datasourceTemplate": "docker",
      "depNameTemplate": "ghcr.io/renovatebot/renovate"
    }
  ]
}
