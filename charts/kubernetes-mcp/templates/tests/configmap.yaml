apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "kubernetes-mcp.tests.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels:
    {{- include "kubernetes-mcp.tests.labels" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  annotations:
    helm.sh/hook: test
    {{- if .Values.commonAnnotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
    {{- end }}
data:
  test_all.py: |
    from mcp import ClientSession
    from mcp.client.streamable_http import streamablehttp_client
    import pytest

    @pytest.mark.asyncio
    async def test_service_connection():
        url = "http://{{ include "kubernetes-mcp.fullname" . }}:{{ .Values.service.ports.http }}/mcp"

        async with streamablehttp_client(url) as (read_stream, write_stream, _):
            async with ClientSession(read_stream, write_stream) as session:
                response = await session.initialize()

                assert response.serverInfo.name == "kubernetes-mcp-server"
